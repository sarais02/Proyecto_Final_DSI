<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptButton.Content" xml:space="preserve">
    <value>YES</value>
  </data>
  <data name="Bright.Text" xml:space="preserve">
    <value>Brightness</value>
  </data>
  <data name="ChartC41.Text" xml:space="preserve">
    <value>Deactivate the ptazetas</value>
  </data>
  <data name="ChartC42.Text" xml:space="preserve">
    <value>Can move any distance</value>
  </data>
  <data name="ChartC43.Text" xml:space="preserve">
    <value>Kills the licorice</value>
  </data>
  <data name="ChartC44.Text" xml:space="preserve">
    <value>It does not move. Kills watermelons</value>
  </data>
  <data name="ChartC45.Text" xml:space="preserve">
    <value>The game is won/lost if it is captured</value>
  </data>
  <data name="ChartT1.Text" xml:space="preserve">
    <value>Character</value>
  </data>
  <data name="ChartT2.Text" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="ChartT3.Text" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="ChartT4.Text" xml:space="preserve">
    <value>Special Hability</value>
  </data>
  <data name="ComboBoxLanguage.PlaceholderText" xml:space="preserve">
    <value>Select a language</value>
  </data>
  <data name="ContinueButton.Content" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="ControlsTitle.Text" xml:space="preserve">
    <value>CONTROLS</value>
  </data>
  <data name="ControlsTitleShadow.Text" xml:space="preserve">
    <value>CONTROLS</value>
  </data>
  <data name="Ctrol1.Text" xml:space="preserve">
    <value>-Select Direction</value>
  </data>
  <data name="Ctrol2.Text" xml:space="preserve">
    <value>-Move Character</value>
  </data>
  <data name="Ctrol3.Text" xml:space="preserve">
    <value>-Pause Menu</value>
  </data>
  <data name="Ctrol4.Text" xml:space="preserve">
    <value>-Select</value>
  </data>
  <data name="DenyButton.Content" xml:space="preserve">
    <value>NO</value>
  </data>
  <data name="ExitButton.Content" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="InfoBaston" xml:space="preserve">
    <value>It is sharp and can pierce almost all the candies, killing them brutally</value>
  </data>
  <data name="InfoBomba" xml:space="preserve">
    <value>Destroys everything in its path, as soon as it detects an enemy in its explosion area, it leaves nothing in its path</value>
  </data>
  <data name="InfoCola" xml:space="preserve">
    <value>It goes absolutely crazy, she can move a lot and very fast in a short period of time. However, it is very weak because it is not very strong</value>
  </data>
  <data name="InfoDedo" xml:space="preserve">
    <value>It has certain resemblances to humans, many candies get scared when they see them appear and more if they are grouped 5 by 5</value>
  </data>
  <data name="InfoFresa" xml:space="preserve">
    <value>The most popular and precious candy, everyone wants it</value>
  </data>
  <data name="InfoHuevo" xml:space="preserve">
    <value>It has its weak point exposed, the yolk, but to be able to finish it you will have to catch it first, and thanks to its white disposition it can crawl very quickly</value>
  </data>
  <data name="InfoPtazetas" xml:space="preserve">
    <value>Their work is very good, they explode and destroy everything in their path. It is said that some have left humans blind</value>
  </data>
  <data name="InfoRegaliz" xml:space="preserve">
    <value>It is flexible and long, it can wrap all the sweets and strangle them</value>
  </data>
  <data name="InfoSandia" xml:space="preserve">
    <value>Double-edged sword, if it attacks from the tip it can cause a lot of damage, on the other hand, if it does it from the part of the peel it will be easy to kill it</value>
  </data>
  <data name="InfoText.Text" xml:space="preserve">
    <value>Move your Token</value>
  </data>
  <data name="InfoText2.Text" xml:space="preserve">
    <value>Place your tokens</value>
  </data>
  <data name="InitBattle.Text" xml:space="preserve">
    <value>Begin Battle</value>
  </data>
  <data name="InitBattleQuestion.Text" xml:space="preserve">
    <value>Do you want to start the battle?</value>
  </data>
  <data name="Language.Text" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LetreroAtaque" xml:space="preserve">
    <value>ATTACK!</value>
  </data>
  <data name="LetreroTurnoEnemigo" xml:space="preserve">
    <value>ENEMY TURN!</value>
  </data>
  <data name="LetreroTurnoJugador" xml:space="preserve">
    <value>YOUR TURN!</value>
  </data>
  <data name="N1.Text" xml:space="preserve">
    <value>-Each turn last 1 minute and 30 seconds.</value>
  </data>
  <data name="N2.Text" xml:space="preserve">
    <value>-You can only move 1 token per minute.</value>
  </data>
  <data name="N3.Text" xml:space="preserve">
    <value>-If at the end of the time per turn the token has not moved, one will be moved randomly.</value>
  </data>
  <data name="N4.Text" xml:space="preserve">
    <value>-A combat takes place when 2 tokens from opposite sides are in the same square.</value>
  </data>
  <data name="N5.Text" xml:space="preserve">
    <value>-When a fight takes place, the one with the highest rank or superior skill wins.</value>
  </data>
  <data name="N6.Text" xml:space="preserve">
    <value>-When a combat takes place, the defeated token disappears and gives way to the winner.</value>
  </data>
  <data name="NameBaston" xml:space="preserve">
    <value>Candy Cane</value>
  </data>
  <data name="NameBombaSandia" xml:space="preserve">
    <value>BombaSandia</value>
  </data>
  <data name="NameCocacola" xml:space="preserve">
    <value>Cocacola</value>
  </data>
  <data name="NameDedo" xml:space="preserve">
    <value>Finger</value>
  </data>
  <data name="NameFresa" xml:space="preserve">
    <value>Strawberry</value>
  </data>
  <data name="NameHuevo" xml:space="preserve">
    <value>Egg</value>
  </data>
  <data name="NamePtazeta" xml:space="preserve">
    <value>Petazeta</value>
  </data>
  <data name="NameRegaliz" xml:space="preserve">
    <value>Licorice</value>
  </data>
  <data name="NameSandia" xml:space="preserve">
    <value>Watermelon</value>
  </data>
  <data name="NewGameButton.Content" xml:space="preserve">
    <value>New Game</value>
  </data>
  <data name="NoSugarButton.Content" xml:space="preserve">
    <value>Sugar Free</value>
  </data>
  <data name="OptionnsButton.Content" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="OpTitle.Text" xml:space="preserve">
    <value>OPTIONS</value>
  </data>
  <data name="OpTitleShadow.Text" xml:space="preserve">
    <value>OPTIONS</value>
  </data>
  <data name="Pasillo1Button.Content" xml:space="preserve">
    <value>Aisle 1</value>
  </data>
  <data name="Pasillo2Button.Content" xml:space="preserve">
    <value>Aisle 2</value>
  </data>
  <data name="Pasillo3Button.Content" xml:space="preserve">
    <value>Aisle 3</value>
  </data>
  <data name="Pasillo4Button.Content" xml:space="preserve">
    <value>Aisle 4</value>
  </data>
  <data name="PauseButtonText.Content" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="PauseTitle.Text" xml:space="preserve">
    <value>PAUSE</value>
  </data>
  <data name="PauseTitleShadow.Text" xml:space="preserve">
    <value>PAUSE</value>
  </data>
  <data name="RegTitle.Text" xml:space="preserve">
    <value>RULES</value>
  </data>
  <data name="RegTitleShadow.Text" xml:space="preserve">
    <value>RULES</value>
  </data>
  <data name="SelectSide.Text" xml:space="preserve">
    <value>Choose side</value>
  </data>
  <data name="SelectSideQuestion.Text" xml:space="preserve">
    <value>Which side would you like to fight on?</value>
  </data>
  <data name="SugarButton.Content" xml:space="preserve">
    <value>Sugar</value>
  </data>
  <data name="TextBackButton.Text" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Volum.Text" xml:space="preserve">
    <value>Volume</value>
  </data>
</root>