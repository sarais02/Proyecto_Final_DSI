<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptButton.Content" xml:space="preserve">
    <value>SI</value>
  </data>
  <data name="Bright.Text" xml:space="preserve">
    <value>Brillo</value>
  </data>
  <data name="ChartC41.Text" xml:space="preserve">
    <value>Desativa las ptazetas</value>
  </data>
  <data name="ChartC42.Text" xml:space="preserve">
    <value>Puede moverse en cualquier distancia</value>
  </data>
  <data name="ChartC43.Text" xml:space="preserve">
    <value>Mata al regaliz</value>
  </data>
  <data name="ChartC44.Text" xml:space="preserve">
    <value>No se mueve. Mata a las sandias</value>
  </data>
  <data name="ChartC45.Text" xml:space="preserve">
    <value>El juego se gana/pierde si es capturada</value>
  </data>
  <data name="ChartT1.Text" xml:space="preserve">
    <value>Personaje</value>
  </data>
  <data name="ChartT2.Text" xml:space="preserve">
    <value>Rango</value>
  </data>
  <data name="ChartT3.Text" xml:space="preserve">
    <value>Cantidad</value>
  </data>
  <data name="ChartT4.Text" xml:space="preserve">
    <value>Habilidad Especial</value>
  </data>
  <data name="ComboBoxLanguage.PlaceholderText" xml:space="preserve">
    <value>Selecciona Un Idioma</value>
  </data>
  <data name="ContinueButton.Content" xml:space="preserve">
    <value>Continuar</value>
  </data>
  <data name="ControlsTitle.Text" xml:space="preserve">
    <value>CONTROLES</value>
  </data>
  <data name="ControlsTitleShadow.Text" xml:space="preserve">
    <value>CONTROLES</value>
  </data>
  <data name="Ctrol1.Text" xml:space="preserve">
    <value>-Seleccionar Direccion</value>
  </data>
  <data name="Ctrol2.Text" xml:space="preserve">
    <value>-Mover Al Personaje</value>
  </data>
  <data name="Ctrol3.Text" xml:space="preserve">
    <value>-Menu Pausa</value>
  </data>
  <data name="Ctrol4.Text" xml:space="preserve">
    <value>-Sleccionar</value>
  </data>
  <data name="DenyButton.Content" xml:space="preserve">
    <value>NO</value>
  </data>
  <data name="ExitButton.Content" xml:space="preserve">
    <value>Salir</value>
  </data>
  <data name="InfoBaston" xml:space="preserve">
    <value>Está afilado y puede atravesar a casi todas las cuches, acabando con ellas brutalmente</value>
  </data>
  <data name="InfoBomba" xml:space="preserve">
    <value>Destruye todo a su paso, en cuanto detecta a algún enemigo en su área de explosion, no deja nada a su paso</value>
  </data>
  <data name="InfoCola" xml:space="preserve">
    <value>Va absolutamente loca puede moverse mucho y muy rápido en un corto periodo de tiempo. Sin embargo es muy débil porque no está muy fuerte</value>
  </data>
  <data name="InfoDedo" xml:space="preserve">
    <value>Tiene ciertos parecidos con los humanos, muchas chuches se asustan al verlos aparecer y más si se agrupan de 5 en 5</value>
  </data>
  <data name="InfoFresa" xml:space="preserve">
    <value>La chuche más popular y preciada, todo el mundo la quiere</value>
  </data>
  <data name="InfoHuevo" xml:space="preserve">
    <value>Tiene su punto débil expuesto, la yema, pero para poder acabar con él deberás cogerlo primero y gracias a su disposición de la clara puede arrastrarse muy rápido</value>
  </data>
  <data name="InfoPtazetas" xml:space="preserve">
    <value>Muy buenos es su trabajo, explotan y arrasan todo a su paso, dicen que algunos han dejado tuertos a humanos</value>
  </data>
  <data name="InfoRegaliz" xml:space="preserve">
    <value>Es flexible y largo, puede envolver a todas las chuches y asfixiarlas</value>
  </data>
  <data name="InfoSandia" xml:space="preserve">
    <value>Arma de doble filo, si ataca por la punta podrá causar mucho daño, en cambio si lo hace por la parte de la cáscara será fácil acabar con ella</value>
  </data>
  <data name="InfoText.Text" xml:space="preserve">
    <value>Mueve tu Ficha</value>
  </data>
  <data name="InfoText2.Text" xml:space="preserve">
    <value>Coloca tus fichas</value>
  </data>
  <data name="InitBattle.Text" xml:space="preserve">
    <value>Iniciar Batalla</value>
  </data>
  <data name="InitBattleQuestion.Text" xml:space="preserve">
    <value>¿Deseas comenzar la batalla?</value>
  </data>
  <data name="Language.Text" xml:space="preserve">
    <value>Lenguaje</value>
  </data>
  <data name="LetreroTurnoEnemigo" xml:space="preserve">
    <value>¡TURNO ENEMIGO!</value>
  </data>
  <data name="LetreroTurnoJugador" xml:space="preserve">
    <value>¡TU TURNO!</value>
  </data>
  <data name="N1.Text" xml:space="preserve">
    <value>-Cada Turno dura 1 minuto y 30 segundos.</value>
  </data>
  <data name="N2.Text" xml:space="preserve">
    <value>-Solo se puede mover una ficha por minuto.</value>
  </data>
  <data name="N3.Text" xml:space="preserve">
    <value>-Si al acabar el tiempo por turno no se ha movido la ficha, se moverá una aleatoriamente.</value>
  </data>
  <data name="N4.Text" xml:space="preserve">
    <value>-Se produce un combate cuando 2 fichas de bandos opuestos se encuentran en la misma casilla.</value>
  </data>
  <data name="N5.Text" xml:space="preserve">
    <value>-Al producirse un combate, el que tenga mayor rango o una habilidad superior, gana.</value>
  </data>
  <data name="N6.Text" xml:space="preserve">
    <value>-Al producirse un combate, la ficha vencida desaparece y cede la casilla a la ganadora.</value>
  </data>
  <data name="NameBaston" xml:space="preserve">
    <value>Baston</value>
  </data>
  <data name="NameBombaSandia" xml:space="preserve">
    <value>BombaSandia</value>
  </data>
  <data name="NameCocacola" xml:space="preserve">
    <value>Cocacola</value>
  </data>
  <data name="NameDedo" xml:space="preserve">
    <value>Dedo</value>
  </data>
  <data name="NameFresa" xml:space="preserve">
    <value>Fresa</value>
  </data>
  <data name="NameHuevo" xml:space="preserve">
    <value>Huevo</value>
  </data>
  <data name="NamePtazeta" xml:space="preserve">
    <value>Petazeta</value>
  </data>
  <data name="NameRegaliz" xml:space="preserve">
    <value>Regaliz</value>
  </data>
  <data name="NameSandia" xml:space="preserve">
    <value>Sandia</value>
  </data>
  <data name="NewGameButton.Content" xml:space="preserve">
    <value>Nueva Partida</value>
  </data>
  <data name="NoSugarButton.Content" xml:space="preserve">
    <value>Sin Azucar</value>
  </data>
  <data name="OptionnsButton.Content" xml:space="preserve">
    <value>Opciones</value>
  </data>
  <data name="OpTitle.Text" xml:space="preserve">
    <value>OPCIONES</value>
  </data>
  <data name="OpTitleShadow.Text" xml:space="preserve">
    <value>OPCIONES</value>
  </data>
  <data name="Pasillo1Button.Content" xml:space="preserve">
    <value>Pasillo 1</value>
  </data>
  <data name="Pasillo2Button.Content" xml:space="preserve">
    <value>Pasillo 2</value>
  </data>
  <data name="Pasillo3Button.Content" xml:space="preserve">
    <value>Pasillo 3</value>
  </data>
  <data name="Pasillo4Button.Content" xml:space="preserve">
    <value>Pasillo 4</value>
  </data>
  <data name="PauseButtonText.Content" xml:space="preserve">
    <value>Pausa</value>
  </data>
  <data name="PauseTitle.Text" xml:space="preserve">
    <value>PAUSA</value>
  </data>
  <data name="PauseTitleShadow.Text" xml:space="preserve">
    <value>PAUSA</value>
  </data>
  <data name="RegTitle.Text" xml:space="preserve">
    <value>REGLAMENTO</value>
  </data>
  <data name="RegTitleShadow.Text" xml:space="preserve">
    <value>REGLAMENTO</value>
  </data>
  <data name="SelectSide.Text" xml:space="preserve">
    <value>Elige Bando</value>
  </data>
  <data name="SelectSideQuestion.Text" xml:space="preserve">
    <value>¿En qué bando te gustaría luchar?</value>
  </data>
  <data name="SugarButton.Content" xml:space="preserve">
    <value>Con Azucar</value>
  </data>
  <data name="TextBackButton.Text" xml:space="preserve">
    <value>Atras</value>
  </data>
  <data name="Volum.Text" xml:space="preserve">
    <value>Volumen</value>
  </data>
</root>